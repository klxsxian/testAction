name: Test a complete CICD process

on: pull_request

jobs:
  check-model-modified-to-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR by removing the merge into main
        id: Checkout-code
        uses: actions/checkout@v2

      - name: Get changed files
        id: get_file_changes
        uses: trilom/file-changes-action@v1.2.3
        with:
          output: ' '

      - name: Get changed .sql files in /models to lint
        id: get_files_to_lint
        run: |
          # Set the command in the $() brackets as an output to use in later steps
          echo "::set-output name=lintees::$(
          # Issue where grep regular expressions don't work as expected on the
          # Github Actions shell, check models/ and analysis/ folders seperately
          echo \
          $(echo ${{ steps.get_file_changes.outputs.files }} |
          tr -s ' ' '\n' |
          grep -E '^models.*[.]sql$' |
          tr -s '\n' ' ') \
          )"

      - name: Install dependencies
        id: Install-dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sqlfluff==0.9.1
          pip install sqlfluff-templater-dbt==0.9.1
          pip install dbt-postgres
          pip install pygit2
          dbt deps

      - name: Lint dbt models
        shell: bash -l {0}
        if: steps.get_files_to_lint.outputs.lintees != ''
        run: |
          sqlfluff lint ${{ steps.get_files_to_lint.outputs.lintees }}

  prefect-dbt-elt:
    needs: check-model-modified-to-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR by removing the merge into main
        id: Checkout-code
        uses: actions/checkout@v2

      - name: Install DBT
        if: ${{ success() }}
        run: |
          python -m pip install --upgrade pip
          pip install dbt-postgres
          pip install pygit2
          dbt deps

      - name: Install prefect
        run: |
          python -m pip install --upgrade pip
          pip install prefect[gitlab,dateutil,dask,distributed,great-expectations,pandas]

      - name: login prefect cloud
        run: |
          prefect backend cloud
          prefect auth login --key pcu_BALmdcZHkFBm0Hyw3s1EjbE7YFpNmJ0qYQ5N

      - name: start agent backend
        run: |
          nohup prefect agent local start -l myAgentLable > agent.log 2>&1 &

      - name: register flow
        run: |
          pwd
          ls
          prefect register --project dbt_tutorial -p ./flows/dbtTest.py -n "dbtTest" -l "myAgentLable"

      - name: run prefect with dbt
        run: |
          prefect run -n "dbtTest" --label "myAgentLable"

      - name: Wait for the process to finish
        run: sleep 120s
        shell: bash

  Check-data-quality-by-great-expectation:
    needs: prefect-dbt-elt
    runs-on: ubuntu-latest
    environment:
      name: env
    steps:
      - name: Checkout PR by removing the merge into main
        id: Checkout-code
        uses: actions/checkout@v2

      - name: Install dependencies
        if: ${{ success() }}
        id: Install-dependencies
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install great_expectations
          pip install sqlalchemy
          pip install psycopg2-binary

      - name: run great_expectation checkpoint
        run: |
          great_expectations checkpoint run myfirstCheckpoint

      - name: show validate result
        if: ${{ always() }}
        run: |
          pwd
          tree great_expectations/uncommitted/data_docs/local_site/ -a -L 3

      - name: Upload COS
        if: ${{ always() }}
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: upload -r ./great_expectations/uncommitted/data_docs  local_site/
          secret_id: ${{ secrets.UPTOC_UPLOADER_KEYID }}
          secret_key: ${{ secrets.UPTOC_UPLOADER_KEYSECRET }}
          bucket: zjw-cos-1302205113
          region: ap-guangzhou
